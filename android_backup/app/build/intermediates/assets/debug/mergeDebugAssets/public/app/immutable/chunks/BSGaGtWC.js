const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./DbSyxoRY.js","./CKXrGhkk.js","./CVH_N3Bp.js","./Dp1pzeXC.js","./DOOvIeY8.js"])))=>i.map(i=>d[i]);
import{_ as f}from"./Dp1pzeXC.js";import{i as s,g as u}from"./CKXrGhkk.js";let e=null,n=null;const c=()=>{const i="Notification"in window,o=s();return i||o},r=async()=>{try{const i=u();console.log("Platform for notification init:",i),i.isNative&&(console.log("Initializing Capacitor notification plugins"),e||(e=(await f(()=>import("./DbSyxoRY.js"),__vite__mapDeps([0,1,2,3]),import.meta.url)).PushNotifications,console.log("Push notifications module loaded")),n||(n=(await f(()=>import("./DOOvIeY8.js"),__vite__mapDeps([4,3,1,2]),import.meta.url)).LocalNotifications,console.log("Local notifications module loaded"),n.addListener("localNotificationReceived",t=>{console.log("Local notification received:",t)})))}catch(i){console.error("Error initializing Capacitor plugins:",i)}},d=async()=>{if(!c())return!1;await r();try{if(s()&&e)return(await e.requestPermissions()).receive==="granted";if("Notification"in window)return await Notification.requestPermission()==="granted"}catch(i){console.error("Error requesting notification permission:",i)}return!1},g=async()=>{if(!c())return"unsupported";await r();try{if(s()&&e){const{receive:i}=await e.checkPermissions();return i==="granted"?"granted":i==="denied"?"denied":"default"}else if("Notification"in window)return Notification.permission}catch(i){console.error("Error checking notification permission:",i)}return"unsupported"},v=async(i,o)=>{try{return console.log(`Updating divine timing for user ${i} to ${o}`),!0}catch(t){return console.error("Error updating divine timing settings:",t),!1}},p=()=>Math.abs(new Date().getTime()%2e9),h=async(i={title:"Divine Timing",body:"This is a test notification from VibeWise."})=>{try{console.log("=== NOTIFICATION TEST STARTED ==="),await r();const o=c();if(console.log("Notifications supported:",o),!o)return console.error("❌ Notifications are not supported on this platform"),!1;const t=await g();if(console.log("Current notification permission status:",t),t!=="granted"){console.log("Requesting notification permission...");const l=await d();if(console.log("Permission request result:",l),!l)return console.error("❌ Permission not granted for notifications"),!1}const a=u();return console.log("Current platform:",a),console.log("Sending test notification on:",a.platform),a.isNative?await m(i):await w(i)}catch(o){return console.error("❌ Exception during notification test:",o),!1}finally{console.log("=== NOTIFICATION TEST COMPLETED ===")}},m=async i=>{try{if(console.log("Attempting to send native notification via Capacitor"),!n&&(console.error("❌ Local notifications plugin not initialized"),await r(),!n))return console.error("❌ Failed to initialize notifications plugin even after retry"),!1;const o=p();console.log("Scheduling local notification with Capacitor, ID:",o);const t={notifications:[{title:i.title,body:i.body,id:o,schedule:{at:new Date(Date.now()+1e3)},sound:"default",smallIcon:"ic_stat_icon",iconColor:"#4D44B3",extra:i.data||{}}]};return console.log("Notification config:",JSON.stringify(t)),await n.schedule(t),console.log("✅ Native notification scheduled successfully"),!0}catch(o){return console.error("❌ Error sending native notification:",o),!1}},w=async i=>{try{if(console.log("Attempting to send web notification"),!("Notification"in window))return console.error("❌ Web Notifications API not supported in this browser"),!1;console.log("Creating web notification with:",i);const o=new Notification(i.title,{body:i.body,icon:i.icon||"/icons/192x192-icon.png",data:i.data,tag:"divine-timing"});return o.onclick=()=>{console.log("Notification clicked, focusing window"),window.focus(),o.close()},console.log("✅ Web notification sent successfully"),!0}catch(o){return console.error("❌ Error sending web notification:",o),!1}};export{c as a,g,d as r,h as s,v as u};
